@page "/change-password"
@inject UserService UserService
@inject NavigationManager Navigation
@using UserManagementFE.Services
@using System.ComponentModel.DataAnnotations

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Đổi Mật Khẩu</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="@changePasswordModel" OnValidSubmit="HandleChangePassword">
                        <DataAnnotationsValidator />
                        <div class="form-group mb-3">
                            <label class="form-label">Mật khẩu cũ:</label>
                            <InputText type="password" class="form-control" @bind-Value="changePasswordModel.OldPassword" />
                            <ValidationMessage For="@(() => changePasswordModel.OldPassword)" class="text-danger" />
                        </div>
                        <div class="form-group mb-3">
                            <label class="form-label">Mật khẩu mới:</label>
                            <InputText type="password" class="form-control" @bind-Value="changePasswordModel.NewPassword" />
                            <ValidationMessage For="@(() => changePasswordModel.NewPassword)" class="text-danger" />
                        </div>
                        <div class="form-group mb-3">
                            <label class="form-label">Xác nhận mật khẩu mới:</label>
                            <InputText type="password" class="form-control" @bind-Value="changePasswordModel.ConfirmPassword" />
                            <ValidationMessage For="@(() => changePasswordModel.ConfirmPassword)" class="text-danger" />
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Đổi Mật Khẩu</button>
                    </EditForm>

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success mt-3">@successMessage</div>
                    }
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3">@errorMessage</div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ChangePasswordModel changePasswordModel = new();
    private string successMessage = string.Empty;
    private string errorMessage = string.Empty;

    private class ChangePasswordModel
    {
        [Required(ErrorMessage = "Mật khẩu cũ là bắt buộc")]
        [StringLength(100, MinimumLength = 6, ErrorMessage = "Mật khẩu cũ phải có ít nhất 6 ký tự")]
        public string OldPassword { get; set; } = string.Empty;

        [Required(ErrorMessage = "Mật khẩu mới là bắt buộc")]
        [StringLength(100, MinimumLength = 6, ErrorMessage = "Mật khẩu mới phải có ít nhất 6 ký tự")]
        public string NewPassword { get; set; } = string.Empty;

        [Required(ErrorMessage = "Xác nhận mật khẩu là bắt buộc")]
        [Compare(nameof(NewPassword), ErrorMessage = "Mật khẩu xác nhận không khớp với mật khẩu mới")]
        public string ConfirmPassword { get; set; } = string.Empty;
    }

    private async Task HandleChangePassword()
    {
        try
        {
            var request = new UserManagementFE.Services.ChangePasswordRequest
                {
                    OldPassword = changePasswordModel.OldPassword,
                    NewPassword = changePasswordModel.NewPassword
                };

            var response = await UserService.ChangePasswordAsync(request);
            successMessage = response;
            errorMessage = string.Empty;
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            successMessage = string.Empty;
            if (ex.Message.Contains("401"))
            {
                Navigation.NavigateTo("/login");
            }
        }
    }
}